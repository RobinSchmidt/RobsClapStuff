Some relevant links for programming clap plugins.

Website:
https://cleveraudio.org/

Getting started:
https://cleveraudio.org/developers-getting-started/

A simple commandline clap host that loads a clap plugin and prints info into a json file:
https://github.com/free-audio/clap-info

GitHub repo:
https://github.com/free-audio/clap/tree/main

Example plugin using the C-API:
https://github.com/free-audio/clap/blob/main/src/plugin-template.c

A C++ wrapper:
https://github.com/free-audio/clap-helpers/blob/main/include/clap/helpers/plugin.hh

..hmm..I'm actually looking for a simple example using the C++ wrapper. But I find none. Looks like 
I have to figure it out myself.


Database of software supporting clap (hosts and plugins):
https://clapdb.tech/


Tutorials about making a clap plugin:

https://www.kvraudio.com/forum/viewtopic.php?t=589258

Part 1:
https://nakst.gitlab.io/tutorial/clap-part-1.html
https://raw.githubusercontent.com/nakst/cdn/main/clap-tutorial-part-1-plugin.cpp


----------------------------------------------------------------------------------------------------
About using the C example:

https://github.com/free-audio/clap/blob/main/src/plugin-template.c

To build it on windows, I had to:
-Create a "Build/VisualStudio2019" folder
-Open Visual Studio and create a new .dll project. I called it ClapTemplate
-Add the plugin-template.c file to the project
-Edit the line  #include <clap/clap.h>  into   #include "../../../clap-main/include/clap/clap.h"
-Deactivate precompliled headers for this file
 -right-click -> properties -> Precompiled Header: Not Using Precompiled Headers 
 -make sure that at the top left "All Configurations" is selected before changing the option (by 
  default, it's not!)
-Build. Produces a ClapTemplate.dll file
-But then I cleaned up all this "precompiled header" nonsense that VS has autogenerated. Kept only
 the dllmain.cpp, copied over the lines:
  #define WIN32_LEAN_AND_MEAN  
  #include <windows.h>
 from the auto-generated files and deleted the others. I had to de-activate the use of pre-compiled
 headers for dllmain.cpp, too. 
